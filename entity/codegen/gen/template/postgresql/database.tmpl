{{ define "database" }}
{{ $header := dict "Package" .Config.Package }}
{{ template "header" $header }}
{{ $db := toFirstCap $.Database.Name}}
{{ $lowerDb := toLower $db }} 
{{ $package := .Config.Package}}
{{ $builder := "Builder" }}



import ( 
	"database/sql"
	"fmt"

	"github.com/yohobala/taurus_go/entity"

	"{{.Config.Package}}/internal"
	
	{{- range $key, $entityName := $.Database.EntityMap }}
		{{- $entity := index $.Database.Entities $entityName }}
		"{{ $package }}/{{ toLower $entity.AttrName }}"
	{{- end }}
)

const {{ $db }}Tag = {{ printf "%q" $.Database.Tag}}

// {{ $db }}  is an struct of the database
type {{ $db }} struct {
    *internal.Config
	tracker entity.Tracker
    {{- range $key, $entityName := $.Database.EntityMap }}
		{{ $entity := index $.Database.Entities $entityName }}
		{{ if $entity.Comment }}
		// {{ $key }}s {{ $entity.Comment }}
		{{- end }}
        {{ $key }}s *{{ $entity.AttrName }}.{{ $entityName }}{{ $builder}}
    {{- end }}
}

// New{{ $db }} creates a new {{ $db }} instance.
func New{{ $db }}() (*{{ $db }}, error) {
    config, err := internal.NewConfig({{ $db }}Tag)
	if err != nil {
		return nil, err
	}
	{{ $lowerDb }} := &{{ $db }}{
		Config: config,
		tracker: &entity.Tracking{},
	}
	{{ $lowerDb }}.init()
	return {{ $lowerDb }},nil
}

// Close closes the database.
func (d *{{ $db }}) Close() error {
	return d.Driver.Close()
}

// Save saves all changes to the database.
func (d *{{ $db }}) Save(ctx context.Context) error {
	tx, err := d.Config.MayTx(ctx)
	if err != nil {
		return err
	}
	if err := func() error {
		for _, m := range d.tracker.Mutators() {
			if err := m.Exec(ctx, tx); err != nil {
				return err
			}
		}
		return nil
	}(); err != nil {
		return entitysql.Rollback(tx, err)
	}
	return tx.Commit()
}

func (d *{{ $db }}) init() {
    {{- range $key, $entityName := $.Database.EntityMap }}
		{{- $entity := index $.Database.Entities $entityName }}
        d.{{ $key }}s = {{ $entity.AttrName }}.New{{ $entity.Name }}{{ $builder}}(d.Config,d.tracker)
		d.tracker.Add(d.{{ $key }}s)
    {{- end }}
}

{{ end }}
